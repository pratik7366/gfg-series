Given an n x m binary matrix mat[][] containing only 0s and 1s, determine if there exists a rectangle within the matrix such that all four corners of the rectangle are 1. If such a rectangle exists, return true; otherwise, return false.





//c++ code 

class Solution {
  public:
    bool ValidCorner(vector<vector<int> >& mat) {
      
    int n = mat.size();
    int m = mat[0].size();
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            unordered_set<int> cols;
            for (int k = 0; k < m; k++) {
                if (mat[i][k] == 1 && mat[j][k] == 1) {
                    if (!cols.empty()) return true;
                    cols.insert(k);
                }
            }
        }
    }
    return false;
    }
};
