Given an array of positive integers arr[] and a non-negative integer x, the task is to find the longest sub-array where the absolute difference between any two elements is not greater than x.
If multiple such subarrays exist, return the one that starts at the smallest index.




//c++ code 

class Solution {
  public:
    vector<int> longestSubarray(vector<int>& arr, int x) {
        
    int n = arr.size(), left = 0, right = 0, start = 0, maxLen = 0;
    multiset<int> window;
    
    while (right < n) {
        window.insert(arr[right]);
        while (*window.rbegin() - *window.begin() > x) {
            window.erase(window.find(arr[left]));
            left++;
        }
        if (right - left + 1 > maxLen) {
            maxLen = right - left + 1;
            start = left;
        }
        right++;
    }
    return vector<int>(arr.begin() + start, arr.begin() + start + maxLen);
        
    }
};
