
Given two binary arrays, a1[] and a2[]. Find the length of longest common span (i, j) where j>= i such that a1[i] + a1[i+1] + .... + a1[j] =  a2[i] + a2[i+1] + ... + a2[j].





//c++ code 

class Solution {
  public:
    int longestCommonSum(vector<int> &a1, vector<int> &a2) {
     
    int n = a1.size();
    unordered_map<int, int> diffMap;
    int maxLen = 0, prefixSum = 0;

    for (int i = 0; i < n; i++) {
        prefixSum += a1[i] - a2[i];
        if (prefixSum == 0)
            maxLen = i + 1;
        else if (diffMap.find(prefixSum) != diffMap.end())
            maxLen = max(maxLen, i - diffMap[prefixSum]);
        else
            diffMap[prefixSum] = i;
    }

    return maxLen;
    }
};
