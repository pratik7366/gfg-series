You are given an array arr[] of integers, where each element arr[i] represents the number of pages in the ith book. You also have an integer k representing the number of students. The task is to allocate books to each student such that:

Each student receives atleast one book.
Each student is assigned a contiguous sequence of books.
No book is assigned to more than one student.




//c++ code 
class Solution {
  public:
  bool isValid(const vector<int>& arr, int k, int maxPages) {
    int students = 1, currentSum = 0;
    for (int pages : arr) {
        if (pages > maxPages) return false;
        if (currentSum + pages > maxPages) {
            students++;
            currentSum = pages;
            if (students > k) return false;
        } else {
            currentSum += pages;
        }
    }
    return true;
}

int findPages(const vector<int>& arr, int k) {
    if (k > arr.size()) return -1;
    int low = *max_element(arr.begin(), arr.end()), high = accumulate(arr.begin(), arr.end(), 0), result = -1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (isValid(arr, k, mid)) {
            result = mid;
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return result;
}
};
