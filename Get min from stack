Given q queries, You task is to implement the following four functions for a stack:

push(x) – Insert an integer x onto the stack.
pop() – Remove the top element from the stack.
peek() - Return the top element from the stack. If the stack is empty, return -1.
getMin() – Retrieve the minimum element from the stack in O(1) time. If the stack is empty, return -1.



//c++ code 

class Solution {
     stack<int> s, minStack;
  public:
    Solution() {}
    void push(int x) {
          s.push(x);
        if (minStack.empty() || x <= minStack.top()) minStack.push(x);
    
    }
    void pop() {
   if (!s.empty()) {
            if (s.top() == minStack.top()) minStack.pop();
            s.pop();
   }
    }
    int peek() {
          return s.empty() ? -1 : s.top();
    }
    int getMin() {
        return minStack.empty() ? -1 : minStack.top();
    }
};
