A message containing letters A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26

You are given a string digits. You have to determine the total number of ways that message can be decoded.





//c++ code 

class Solution {
  public:
    int countWays(string &digits) {

    int n = digits.size();
    if (n == 0 || digits[0] == '0') return 0;
    vector<int> dp(n + 1, 0);
    dp[0] = dp[1] = 1;
    for (int i = 2; i <= n; i++) {
        if (digits[i - 1] != '0') dp[i] += dp[i - 1];
        int twoDigit = stoi(digits.substr(i - 2, 2));
        if (twoDigit >= 10 && twoDigit <= 26) dp[i] += dp[i - 2];
    }
    return dp[n];
        
    }
};
