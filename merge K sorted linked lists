Given an array arr[] of n sorted linked lists of different sizes. The task is to merge them in such a way that after merging they will be a single sorted linked list, then return the head of the merged linked list.




//c++ code 

class Solution {
  public:
   #define p pair<int,Node*>
    Node* mergeKLists(vector<Node*>& arr) {
        
        Node* newHead= new Node(-1);
        priority_queue<p,vector<p>,greater<p>>pq;
        for(int i=0;i<arr.size();i++){
            Node*temp=arr[i];
            pq.push({temp->data,temp});
        }
        Node *temp=newHead;
        while(!pq.empty()){
            Node* curr=pq.top().second;
            pq.pop();
            temp->next=curr;
            temp=temp->next;
            if(curr->next) pq.push({curr->next->data,curr->next});
        }
        return newHead->next;
    }
};
