Given a string s, the task is to find the minimum characters to be added at the front to make the string palindrome.

Note: A palindrome string is a sequence of characters that reads the same forward and backward.


//c++ code 
class Solution {
  public:
    int minChar(string& s) {
    
    string rev = s;
    reverse(rev.begin(), rev.end());
    string combined = s + "#" + rev;
    int n = combined.size();
    vector<int> lps(n, 0);

    for (int i = 1; i < n; i++) {
        int j = lps[i - 1];
        while (j > 0 && combined[i] != combined[j]) {
            j = lps[j - 1];
        }
        if (combined[i] == combined[j]) {
            j++;
        }
        lps[i] = j;
    }

    return s.size() - lps.back();
    }
};
