Given a string s consisting of lowercase alphabets and an integer k, your task is to find the minimum possible value of the string after removing exactly k characters.

The value of the string is defined as the sum of the squares of the frequencies of each distinct character present in the string.



//c++ code 

class Solution {
  public:
    int minValue(string &s, int k) {
      
   
        unordered_map<char, int> freq;
        for (int i = 0; i < s.size(); ++i) {
            freq[s[i]]++;
        }
        priority_queue<int> pq;
        for (unordered_map<char, int>::iterator it = freq.begin(); it != freq.end(); ++it) {
            pq.push(it->second);
        }
        while (k-- && !pq.empty()) {
            int top = pq.top();
            pq.pop();
            top--;
            if (top > 0) pq.push(top);
        }
        int result = 0;
        while (!pq.empty()) {
            int f = pq.top();
            pq.pop();
            result += f * f;
        }
        return result;
    }
};
