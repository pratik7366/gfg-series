Given a garden with n flowers planted in a row, that is represented by an array arr[], where arr[i] denotes the height of the ith flower.You will water them for k days. In one day you can water w continuous flowers. Whenever you water a flower its height increases by 1 unit. You have to maximize the minimum height of all flowers after  k days of watering.




//c++ code 

class Solution {
  public:

       bool isPossible(vector<int>& arr, int k, int w, int target) {
    int n = arr.size();
    vector<int> water(n + 1, 0);
    long long total = 0;
    int add = 0;

    for (int i = 0; i < n; i++) {
        add += water[i];
        int curr = arr[i] + add;
        if (curr < target) {
            int need = target - curr;
            total += need;
            if (total > k) return false;
            add += need;
            if (i + w < n) water[i + w] -= need;
        }
    }
    return true;
}

int maxMinHeight(vector<int>& arr, int k, int w) {
    int low = *min_element(arr.begin(), arr.end());
    int high = low + k;
    int ans = low;

    while (low <= high) {
        int mid = (low + high) / 2;
        if (isPossible(arr, k, w, mid)) {
            ans = mid;
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return ans;
    }
};
