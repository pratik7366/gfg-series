
Given a string consisting of lowercase characters and an integer k, the task is to count all possible substrings (not necessarily distinct) that have exactly k distinct characters. 




//c++ code 

class Solution {
  public:
    int countSubstr(string& s, int k) {
    
       return atMostK(s, k) - atMostK(s, k - 1);
    }

private:
    int atMostK(const string& s, int k) {
        if (k == 0) return 0;
        int freq[26] = {0};
        int left = 0, right = 0, distinct = 0, res = 0;

        while (right < s.size()) {
            if (freq[s[right] - 'a'] == 0) distinct++;
            freq[s[right] - 'a']++;
            while (distinct > k) {
                freq[s[left] - 'a']--;
                if (freq[s[left] - 'a'] == 0) distinct--;
                left++;
            }
            res += right - left + 1;
            right++;
        }

        return res;
    }
};
