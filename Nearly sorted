


Given an array arr[], where each element is at most k away from its target position, you need to sort the array optimally.
Note: You need to change the given array arr[] in place.//c++ code 
class Solution {
  public:
    void nearlySorted(vector<int>& arr, int k) {
        
    priority_queue<int, vector<int>, greater<int>> minHeap;
    for (int i = 0; i <= k && i < arr.size(); i++) minHeap.push(arr[i]);
    int index = 0;
    for (int i = k + 1; i < arr.size(); i++) {
        arr[index++] = minHeap.top();
        minHeap.pop();
        minHeap.push(arr[i]);
    }
    while (!minHeap.empty()) {
        arr[index++] = minHeap.top();
        minHeap.pop();
    }

    }
};
