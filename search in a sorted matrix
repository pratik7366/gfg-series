
Given a strictly sorted 2D matrix mat[][] of size n x m and a number x. Find whether the number x is present in the matrix or not.
Note: In a strictly sorted matrix, each row is sorted in strictly increasing order, and the first element of the ith row (i!=0) is greater than the last element of the (i-1)th row.


//c++ code 
class Solution {
  public:
   
    bool searchMatrix(vector<vector<int>> &mat, int x) {
        
    int n = mat.size(), m = mat[0].size();
    int i = 0, j = m - 1;
    
    while (i < n && j >= 0) {
        if (mat[i][j] == x) return true;
        else if (mat[i][j] > x) j--;
        else i++;
    }
    return false;
    }
};
