Given a circular integer array arr[], the task is to determine the next greater element (NGE) for each element in the array.

The next greater element of an element arr[i] is the first element that is greater than arr[i] when traversing circularly. If no such element exists, return -1 for that position.

Circular Property:

Since the array is circular, after reaching the last element, the search continues from the beginning until we have looked at all elements once.



//c++ code 

class Solution {
  public:
   
      vector<int> nextLargerElement(vector<int>& nums) {
    int n = nums.size();
    vector<int> result(n, -1);
    stack<int> st;

    for (int i = 2 * n - 1; i >= 0; --i) {
        int index = i % n;
        while (!st.empty() && st.top() <= nums[index]) {
            st.pop();
        }
        if (i < n) {
            if (!st.empty()) result[index] = st.top();
        }
        st.push(nums[index]);
    }
    return result;
        
    }
};
