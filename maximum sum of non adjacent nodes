Given a binary tree with a value associated with each node. Your task is to select a subset of nodes such that the sum of their values is maximized, with the condition that no two selected nodes are directly connected that is, if a node is included in the subset, neither its parent nor its children can be included.




//c++ code 

class Solution {
  public:

    
        pair<int, int> dfs(Node* root) {
        if (!root) return {0, 0};
        auto l = dfs(root->left);
        auto r = dfs(root->right);
        int include = root->data + l.second + r.second;
        int exclude = max(l.first, l.second) + max(r.first, r.second);
        return {include, exclude};
    }

    int getMaxSum(Node* root) {
        auto res = dfs(root);
        return max(res.first, res.second);
    
        
    }
};
