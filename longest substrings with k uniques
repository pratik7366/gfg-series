You are given a string s consisting only lowercase alphabets and an integer k. Your task is to find the length of the longest substring that contains exactly k distinct characters.

Note : If no such substring exists, return -1. 





//c++ code 

class Solution {
  public:
    int longestKSubstr(string &s, int k) {
    
    unordered_map<char, int> freq;
    int left = 0, maxLen = -1;
    for (int right = 0; right < s.size(); ++right) {
        freq[s[right]]++;
        while (freq.size() > k) {
            freq[s[left]]--;
            if (freq[s[left]] == 0) freq.erase(s[left]);
            left++;
        }
        if (freq.size() == k) maxLen = max(maxLen, right - left + 1);
    }
    return maxLen;
    }
};
