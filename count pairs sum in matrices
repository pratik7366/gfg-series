

Given two matrices mat1[][] and mat2[][] of size n x n, where the elements in each matrix are arranged in strictly ascending order. Specifically, each row is sorted from left to right, and the last element of a row is smaller than the first element of the next row.
You're given a target value x, your task is to find and count all pairs {a, b} such that a is from mat1 and b is from mat2 where the sum of a + b is equal to x.





//c++ code 

class Solution {
  public:
   int countPairs(vector<vector<int>> &mat1, vector<vector<int>> &mat2, int x) {
    unordered_map<int, int> freq;
    int n = mat1.size(), count = 0;

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            freq[mat2[i][j]]++;

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j) {
            int complement = x - mat1[i][j];
            if (freq.find(complement) != freq.end())
                count += freq[complement];
        }

    return count;
    }
};
