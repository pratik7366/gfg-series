Given an array arr[] that contains positive and negative integers (may contain 0 as well). Find the maximum product that we can get in a subarray of arr.

Note: It is guaranteed that the output fits in a 32-bit integer.

//c++ code
  class Solution {
  public:
    // Function to find maximum product subarray
    int maxProduct(vector<int> &arr) {
    
    int n = arr.size();
    int maxProduct = arr[0], minProduct = arr[0], result = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] < 0) swap(maxProduct, minProduct);
        maxProduct = max(arr[i], maxProduct * arr[i]);
        minProduct = min(arr[i], minProduct * arr[i]);
        result = max(result, maxProduct);
    }
    return result;
    }
};
