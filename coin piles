You are given an array arr[] of integers, where each element represents the number of coins in a pile. You are also given an integer k.
Your task is to remove the minimum number of coins such that the absolute difference between the number of coins in any two remaining piles is at most k.

Note: You can also remove a pile by removing all the coins of that pile.





//c++ code 

class Solution {
  public:
    int minimumCoins(vector<int>& arr, int k) {
    
    int n = arr.size();
    sort(arr.begin(), arr.end());
    
    vector<long long> prefixSum(n + 1, 0);
    for (int i = 0; i < n; ++i)
        prefixSum[i + 1] = prefixSum[i] + arr[i];

    long long total = LLONG_MAX;
    for (int i = 0; i < n; ++i) {
        int upper = upper_bound(arr.begin(), arr.end(), arr[i] + k) - arr.begin();
        long long leftRemove = prefixSum[i];
        long long rightRemove = prefixSum[n] - prefixSum[upper] - 1LL * (n - upper) * (arr[i] + k);
        total = min(total, leftRemove + rightRemove);
    }

    return total;
        
    }
};
